datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_PROJECT")
}

generator client {
  provider = "prisma-client-js"
  // output   = "prisma-client"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model Category {
  id                String         @id @default(cuid())
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  name              String         @unique @db.VarChar(255)
  color             String?
  icon              String?
  description       String?        @db.Text
  aspects           Aspect[]
  elements          Element[]
  relationTypeLeft  RelationType[] @relation(name: "relationTypeLeft")
  relationTypeRight RelationType[] @relation(name: "relationTypeRight")
}

model Aspect {
  id          String      @id @default(cuid())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  name        String      @unique @db.VarChar(255)
  color       String?
  icon        String?
  description String?     @db.Text
  categories  Category[]
  attributes  Attribute[]
}

model Attribute {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String    @unique @db.VarChar(255)
  description String?   @db.Text
  aspect      Aspect    @relation(fields: [aspectId], references: [id])
  aspectId    String
  string      String?   @db.MediumText
  integer     Int?
  json        Json?
  elements    Element[]
}

model Element {
  id             String      @id @default(cuid())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  name           String      @unique @db.VarChar(255)
  params         Json?
  category       Category    @relation(fields: [categoryId], references: [id])
  categoryId     String
  attributes     Attribute[]
  relationsLeft  Relation[]  @relation(name: "relationsLeft")
  relationsRight Relation[]  @relation(name: "relationsRight")
}

model RelationType {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  name            String   @unique @db.VarChar(255)
  color           String?
  icon            String?
  description     String?  @db.Text
  params          Json?
  categoryLeft    Category @relation(name: "relationTypeLeft", fields: [categoryLeftId], references: [id])
  categoryLeftId  String
  categoryRight   Category @relation(name: "relationTypeRight", fields: [categoryRightId], references: [id])
  categoryRightId String
}

model Relation {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  elementLeft    Element  @relation(name: "relationsLeft", fields: [elementLeftId], references: [id])
  elementLeftId  String
  elementRight   Element  @relation(name: "relationsRight", fields: [elementRightId], references: [id])
  elementRightId String
}
